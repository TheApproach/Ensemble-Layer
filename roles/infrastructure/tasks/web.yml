## WEB STACK

# stop apache2
- name: Stop apache2
  ansible.builtin.shell: systemctl stop apache2
  become: true
  become_user: root
  ignore_errors: true


# stop apache2
- name: Stop apache2
  ansible.builtin.shell: systemctl disable apache2
  become: true
  become_user: root
  ignore_errors: true

# disable apache2
- name: Disable apache2 service
  ansible.builtin.service:
    name: apache2
    enabled: false
    state: stopped
  become: true
  become_user: root
  ignore_errors: true

# uninstall apache2
- name: Uninstall the Apache web server
  become: true
  become_user: root
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
  loop:
    - apache2
    - apache2-bin
    - apache2-data
    - apache2-utils

# Install PHP 8.2
- name: Add PPA for PHP 8.2
  become: true
  become_user: root
  ansible.builtin.apt_repository:
    repo: ppa:ondrej/php
    state: present
    validate_certs: false

- name: Install PHP 8.2
  become: true
  become_user: root
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - php8.2
    - php8.2-cli
    - php8.2-common
    - php8.2-curl
    - php8.2-gd
    - php8.2-intl
    - php8.2-mbstring
    - php8.2-mysql
    - php8.2-opcache
    - php8.2-readline
    - php8.2-xml
    - php8.2-zip

# Install PHP-FPM
- name: Install PHP-FPM
  ansible.builtin.apt:
    name: "php8.2-fpm"
    state: present
  become: true
  become_user: root

- name: Enable PHP-FPM service
  ansible.builtin.service:
    name: "php8.2-fpm"
    enabled: true
    state: started
  become: true
  become_user: root

# Install nginx
- name: Install nginx
  ansible.builtin.apt:
    name: nginx
    state: present
  become: true
  become_user: root

# Create PHP-FPM configuration file for project
- name: Create PHP-FPM configuration file for project
  ansible.builtin.template:
    src: templates/php-fpm.conf.j2
    dest: /etc/php/8.2/fpm/pool.d/{{ project_name }}.conf
  register: php_fpm_conf_file
  become: true
  become_user: root

# Print PHP-FPM configuration file path
- name: Print PHP-FPM configuration file path
  ansible.builtin.debug:
    msg: "PHP-FPM configuration file is at {{ php_fpm_conf_file.dest }}"

- name: Reload PHP-FPM service
  ansible.builtin.service:
    name: "php8.2-fpm"
    state: reloaded
  become: true
  become_user: root

# Create nginx configuration file for project
- name: Create nginx configuration file for project
  ansible.builtin.template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/sites-available/{{ project_name }}.conf
  become: true
  become_user: root

- name: Enable nginx configuration file for project
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{ project_name }}.conf
    dest: /etc/nginx/sites-enabled/{{ project_name }}.conf
    state: link
  become: true
  become_user: root

# firewall rules for NGINX
- name: Allow incoming traffic on port 80 (TCP)
  become: true
  become_user: root
  community.general.ufw:
    rule: allow
    port: 80
    proto: tcp

- name: Allow incoming traffic on port 443 (TCP)
  become: true
  become_user: root
  community.general.ufw:
    rule: allow
    port: 443
    proto: tcp

- name: Enable ufw
  become: true
  become_user: root
  community.general.ufw:
    state: enabled

- name: Enable nginx service
  ansible.builtin.service:
    name: nginx
    enabled: true
    state: started
  become: true
  become_user: root

- name: Reload nginx
  ansible.builtin.service:
    name: nginx
    state: reloaded
  become: true
  become_user: root

# name: Replace NGINX with Caddy
- name: Replace NGINX with Caddy
  ansible.builtin.apt:
    name: caddy
    state: present
  become: true
  become_user: root

# Create PHP socket for project name

# name: Set PHP socket variable
- name: Set PHP socket variable
  set_fact:
    php_socket: "/var/run/php/{{ project_name }}.sock"

# Add variable to NGINX storing the location of the socket in nginx.conf

# name: Add PHP socket location to NGINX variable
- name: Add PHP socket location to NGINX variable
  set_fact:
    nginx_php_socket: "{{ php_socket }}"

# Add an include line to nginx.conf to import .conf from the suite-share

# name: Add include line to nginx.conf
- name: Add include line to nginx.conf
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: "^(http {)"
    line: "    include /usr/share/suitespace/config/nginx/*.conf;"

# Make sure NGINX and PHP-FPM services are both enabled

# name: Ensure NGINX service is enabled
- name: Ensure NGINX service is enabled
  ansible.builtin.service:
    name: nginx
    enabled: true
    state: started
  become: true
  become_user: root

# name: Ensure PHP-FPM service is enabled
- name: Ensure PHP-FPM service is enabled
  ansible.builtin.service:
    name: "php8.2-fpm"
    enabled: true
    state: started
  become: true
  become_user: root

# Enable NGINX and PHP-FPM services

# name: Enable NGINX service
- name: Enable NGINX service
  ansible.builtin.service:
    name: nginx
    enabled: true
  become: true
  become_user: root

# name: Enable PHP-FPM service
- name: Enable PHP-FPM service
  ansible.builtin.service:
    name: "php8.2-fpm"
    enabled: true
  become: true
  become_user: root

# Start NGINX and PHP-FPM services

# name: Start NGINX service
- name: Start NGINX service
  ansible.builtin.service:
    name: nginx
    state: started
  become: true
  become_user: root

# name: Start PHP-FPM service
- name: Start PHP-FPM service
  ansible.builtin.service:
    name: "php8.2-fpm"
    state: started
  become: true
  become_user: root

# Restart NGINX and PHP-FPM services

# name: Restart NGINX service
- name: Restart NGINX service
  ansible.builtin.service:
    name: nginx
    state: restarted
  become: true
  become_user: root

# name: Restart PHP-FPM service
- name: Restart PHP-FPM service
  ansible.builtin.service:
    name: "php8.2-fpm"
    state: restarted
  become: true
  become_user: root

# Stop NGINX and PHP-FPM services

# name: Stop NGINX service
- name: Stop NGINX service
  ansible.builtin.service:
    name: nginx
    state: stopped
  become: true
  become_user: root

# name: Stop PHP-FPM service
- name: Stop PHP-FPM service
  ansible.builtin.service:
    name: "php8.2-fpm"
    state: stopped
  become: true
  become_user: root
## END WEB STACK
